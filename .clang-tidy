---
Checks: '
  *,
  -abseil-string-find-str-contains,
  -altera-id-dependent-backward-branch,
  -altera-struct-pack-align,
  -altera-unroll-loops,
  -*braces-around-statements,
  -bugprone-easily-swappable-parameters,
  -cert-env33-c,
  -clang-analyzer-cplusplus.NewDeleteLeaks,
  -clang-analyzer-optin.cplusplus.VirtualCall,
  -clang-diagnostic-unused-macros,
  -cppcoreguidelines-non-private-member-variables-in-classes,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-bounds-constant-array-index,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,
  -cppcoreguidelines-pro-type-const-cast,
  -cppcoreguidelines-pro-type-union-access,
  -cppcoreguidelines-pro-type-vararg,
  -fuchsia-default-arguments-calls,
  -fuchsia-default-arguments-declarations,
  -fuchsia-overloaded-operator,
  -fuchsia-trailing-return,
  -google-runtime-int,
  -google-runtime-references,
  -hicpp-member-init,
  -hicpp-move-const-arg,
  -hicpp-multiway-paths-covered,
  -hicpp-no-array-decay,
  -hicpp-signed-bitwise,
  -hicpp-uppercase-literal-suffix,
  -hicpp-vararg,
  -llvm-else-after-return,
  -llvm-header-guard,
  -llvmlibc-callee-namespace,
  -llvmlibc-implementation-in-namespace,
  -llvmlibc-restrict-system-libc-headers,
  -llvm-qualified-auto,
  -*-magic-numbers,
  -misc-non-private-member-variables-in-classes,
  -modernize-use-trailing-return-type,
  -*namespace-comment,
  -*namespace-comments,
  -readability-convert-member-functions-to-static,
  -readability-else-after-return,
  -readability-identifier-length,
  -readability-uppercase-literal-suffix,
'

CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase, value: PascalCase }
  - { key: readability-identifier-naming.ClassCase, value: PascalCase }
  - { key: readability-identifier-naming.StructCase, value: PascalCase }
  - {
      key: readability-identifier-naming.TemplateParameterCase,
      value: PascalCase,
    }
  - { key: readability-identifier-naming.FunctionCase, value: camelCase }
  - { key: readability-identifier-naming.VariableCase, value: camelCase }
  - { key: readability-identifier-naming.ClassMemberCase, value: PascalCase }
  - { key: readability-identifier-naming.ClassMemberSuffix, value: _ }
  - { key: readability-identifier-naming.PrivateMemberSuffix, value: _ }
  - { key: readability-identifier-naming.ProtectedMemberSuffix, value: _ }
  - { key: readability-identifier-naming.EnumConstantCase, value: PascalCase }
  - { key: readability-identifier-naming.EnumConstantPrefix, value: k }
  - {
      key: readability-identifier-naming.ConstexprVariableCase,
      value: PascalCase,
    }
  - { key: readability-identifier-naming.ConstexprVariablePrefix, value: k }
  - { key: readability-identifier-naming.GlobalConstantCase, value: PascalCase }
  - { key: readability-identifier-naming.GlobalConstantPrefix, value: k }
  - { key: readability-identifier-naming.MemberConstantCase, value: PascalCase }
  - { key: readability-identifier-naming.MemberConstantPrefix, value: k }
  - { key: readability-identifier-naming.StaticConstantCase, value: PascalCase }
  - { key: readability-identifier-naming.StaticConstantPrefix, value: k }
  - {
      key: readability-implicit-bool-conversion.AllowIntegerConditions,
      value: 1,
    }
  - {
      key: readability-implicit-bool-conversion.AllowPointerConditions,
      value: 1,
    }
  - { key: readability-function-cognitive-complexity.IgnoreMacros, value: 1 }
