---
Checks: '*, -cppcoreguidelines-pro-bounds-array-to-pointer-decay, -cppcoreguidelines-pro-bounds-constant-array-index, -cppcoreguidelines-pro-type-vararg, -fuchsia-*, -google-readability-todo, -google-runtime-references, -hicpp-braces-around-statements, -hicpp-no-array-decay, -hicpp-vararg, -modernize-use-trailing-return-type, -readability-avoid-const-params-in-decls, -readability-simplify-boolean-expr, -llvmlibc-*'

CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase, value: PascalCase }
  - { key: readability-identifier-naming.ClassCase, value: PascalCase }
  - { key: readability-identifier-naming.StructCase, value: PascalCase }
  - {
      key: readability-identifier-naming.TemplateParameterCase,
      value: PascalCase,
    }
  - { key: readability-identifier-naming.FunctionCase, value: camelCase }
  - { key: readability-identifier-naming.VariableCase, value: camelCase }
  - { key: readability-identifier-naming.ClassMemberCase, value: PascalCase }
  - { key: readability-identifier-naming.EnumConstantCase, value: PascalCase }
  - { key: readability-identifier-naming.EnumConstantPrefix, value: k }
  - {
      key: readability-identifier-naming.ConstexprVariableCase,
      value: PascalCase,
    }
  - { key: readability-identifier-naming.ConstexprVariablePrefix, value: k }
  - { key: readability-identifier-naming.GlobalConstantCase, value: PascalCase }
  - { key: readability-identifier-naming.GlobalConstantPrefix, value: k }
  - { key: readability-identifier-naming.MemberConstantCase, value: PascalCase }
  - { key: readability-identifier-naming.MemberConstantPrefix, value: k }
  - { key: readability-identifier-naming.StaticConstantCase, value: PascalCase }
  - { key: readability-identifier-naming.StaticConstantPrefix, value: k }
  - {
      key: readability-implicit-bool-conversion.AllowIntegerConditions,
      value: 1,
    }
  - {
      key: readability-implicit-bool-conversion.AllowPointerConditions,
      value: 1,
    }
  - { key: readability-function-cognitive-complexity.IgnoreMacros, value: 1 }
